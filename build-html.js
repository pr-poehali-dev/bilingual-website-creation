import { exec } from "child_process";
import { promises as fs } from "fs";
import path from "path";

// –°–±–æ—Ä–∫–∞ –ø—Ä–æ–µ–∫—Ç–∞ –∏ —Å–æ–∑–¥–∞–Ω–∏–µ HTML –≤–µ—Ä—Å–∏–∏
console.log("üöÄ –°–æ–∑–¥–∞–Ω–∏–µ HTML –≤–µ—Ä—Å–∏–∏...");

exec("npm run build", async (error, stdout, stderr) => {
  if (error) {
    console.error("–û—à–∏–±–∫–∞ —Å–±–æ—Ä–∫–∏:", error);
    return;
  }

  console.log("‚úÖ –°–±–æ—Ä–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞");
  console.log("üìÅ HTML —Ñ–∞–π–ª—ã –≥–æ—Ç–æ–≤—ã –≤ –ø–∞–ø–∫–µ dist/");

  try {
    // –ß–∏—Ç–∞–µ–º —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ –ø–∞–ø–∫–∏ dist
    const distPath = path.join(process.cwd(), "dist");
    const files = await fs.readdir(distPath, { withFileTypes: true });

    console.log("\nüìã –°–æ–∑–¥–∞–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã:");
    for (const file of files) {
      if (file.isFile()) {
        console.log(`   ${file.name}`);
      }
    }

    console.log("\nüåê –ì–æ—Ç–æ–≤–æ! –¢–µ–ø–µ—Ä—å —É —Ç–µ–±—è –µ—Å—Ç—å:");
    console.log("   ‚Ä¢ index.html - –≥–ª–∞–≤–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞");
    console.log("   ‚Ä¢ assets/ - —Å—Ç–∏–ª–∏ –∏ —Å–∫—Ä–∏–ø—Ç—ã");
    console.log("   ‚Ä¢ –í—Å–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –∏ —Ä–µ—Å—É—Ä—Å—ã");
  } catch (err) {
    console.log("HTML —Ñ–∞–π–ª—ã —Å–æ–∑–¥–∞–Ω—ã –≤ –ø–∞–ø–∫–µ dist/");
  }
});
